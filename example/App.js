/**
 * Sample React Native App
 *
 * adapted from App.js generated by the following command:
 *
 * react-native init example
 *
 * https://github.com/facebook/react-native
 */

import React, { Component } from 'react';
import {NativeEventEmitter, Platform, StyleSheet, Text, Button, View} from 'react-native';
import PTPaytabsLibrary from 'react-native-paytabs-library';

// Prepare Paypage events for IOS
const eventPreparePaypageEmitter = new NativeEventEmitter(PTPaytabsLibrary);
const subscription = eventPreparePaypageEmitter.addListener(
  'EventPreparePaypage',
  (prepare) =>  PTPaytabsLibrary.log("eventPreparePaypageEmitter: " + prepare.action)
);

const instructions = Platform.select({
  ios: 'Press Cmd+R to reload,\n' + 'Cmd+D or shake for dev menu',
  android:
    'Double tap R on your keyboard to reload,\n' +
    'Shake or press menu button for dev menu',
});

type Props = {};
export default class App extends Component<Props> {
  
  state = {
    message: '--'
  };

  constructor(props){
    super(props);
    this.state = { message: '' };
  }

  onPressPay(){
    PTPaytabsLibrary.start({
      [PTPaytabsLibrary.merchant_email]: "rhegazy@paytabs.com",
      [PTPaytabsLibrary.secret_key]: "BIueZNfPLblJnMmPYARDEoP5x1WqseI3XciX0yNLJ8v7URXTrOw6dmbKn8bQnTUk6ch6L5SudnC8fz2HozNBVZlj7w9uq4Pwg7D1",// Add your Secret Key Here
      [PTPaytabsLibrary.transaction_title]: "Mr. John Doe",
      [PTPaytabsLibrary.amount]: "2.0",
      [PTPaytabsLibrary.currency_code]: "USD",
      [PTPaytabsLibrary.customer_email]: "test@example.com",
      [PTPaytabsLibrary.customer_phone_number]: "+97333109781",
      [PTPaytabsLibrary.order_id]: "1234567",
      [PTPaytabsLibrary.product_name]: "Tomato",
      [PTPaytabsLibrary.timeout_in_seconds]: "300", //Optional
      [PTPaytabsLibrary.address_billing]: "test test",
      [PTPaytabsLibrary.city_billing]: "Juffair",
      [PTPaytabsLibrary.state_billing]: "Manama",
      [PTPaytabsLibrary.country_billing]: "BHR",
      [PTPaytabsLibrary.postal_code_billing]: "00973", //Put Country Phone code if Postal code not available '00973'//
      [PTPaytabsLibrary.address_shipping]: "test test",
      [PTPaytabsLibrary.city_shipping]: "Juffair",
      [PTPaytabsLibrary.state_shipping]: "Manama",
      [PTPaytabsLibrary.country_shipping]: "BHR",
      [PTPaytabsLibrary.postal_code_shipping]: "00973", //Put Country Phone code if Postal
      [PTPaytabsLibrary.color]: "#cccccc",
      [PTPaytabsLibrary.language]: 'en', // 'en', 'ar'
      [PTPaytabsLibrary.tokenization]: true,
      [PTPaytabsLibrary.preauth]: false
    }, (response) => {
      // Callback for success & fail.
    
      // { pt_token_customer_email: '',pt_token: '',pt_token_customer_password: '', pt_transaction_id: '123456',pt_response_code: '100' }
    
      PTPaytabsLibrary.log("on Response Payment");
      console.log(response);
      // Response Code: 100 successful otherwise fail
      if (response.pt_response_code == '100')
        PTPaytabsLibrary.log("Transaction Id: " + response.pt_transaction_id);
      else
        PTPaytabsLibrary.log("Otherwise Response: " + response.pt_response_code);
      this.state = { message: response.pt_transaction_id };
    
      // Tokenization
      //RNPaytabs.log(response.pt_token_customer_email);
      //RNPaytabs.log(response.pt_token_customer_password);
      //RNPaytabs.log(response.pt_token);
      
    });
  }
  render() {
    return (
      <View style={styles.container}>
        <Text style={styles.welcome}>Welcome to Paytabs Native!</Text>
        <Text style={styles.instructions}>To get started, edit App.js</Text>
        <Text style={styles.instructions}>{instructions}</Text>
        <Text style={styles.instructions}>{this.state.message}</Text>
        <Button
            onPress={this.onPressPay}
            title="Pay now"
            color="#c00"
          />
      </View>
    );
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#F5FCFF',
  },
  welcome: {
    fontSize: 20,
    textAlign: 'center',
    margin: 10,
  },
  instructions: {
    textAlign: 'center',
    color: '#333333',
    marginBottom: 5,
  },
});
